@model Church.ViewModels.MemberViewModel
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<script type="text/javascript" src="http://www.clubdesign.at/floatlabels.js">
    $(function () {
        $('input').floatlabel({ labelEndTop: 0 });
    });
</script>


<div class="container well" style="border-radius:10px;">
    <div class="row">
        <div class="col-md-offset-2 col-md-8">
            <h2><strong>Member Registration</strong></h2>
            <br />
        </div>
    </div>

    @using (Html.BeginForm("Add", "Member", FormMethod.Post, new { @data_toggle = "validator", @role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <h4>Member Registration</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-12" })
                <div class="col-md-6 col-sm-12">
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => Model.FirstName) })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6  col-sm-12">
                    @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => Model.MiddleName) })
                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => Model.LastName) })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CellPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.CellPhone, new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => Model.CellPhone) })
                    @Html.ValidationMessageFor(model => model.CellPhone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HomePhone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.HomePhone, new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => Model.HomePhone) })
                    @Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => Model.Email) })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => Model.Address) })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.PostalCode, new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => Model.PostalCode) })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.PostalCode, new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => Model.PostalCode) })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.City, new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => Model.City) })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Profession, new { @class = "control-label col-md-2" })
                @Html.HiddenFor(model => model.ProfessionId)
                <div class="col-md-6">                  
                    @Html.TextBoxFor(model => model.Profession.Name, new { @class = "form-control", @placeholder = "Type a Profession", @id = "profession-auto-search", @required = "" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, new { @class = "control-label col-md-2" })<br />
                @Html.HiddenFor(model => model.Gender)
                <div class="col-md-6 btn-group" data-toggle="buttons">
                    <label id="toggle-male" data-toggle-class="btn-success" class="btn btn-success active">
                        <input type="radio" name="options" value="@Church.Helpers.Gender.Male" />
                        @Church.Helpers.Gender.Male
                    </label>
                    <label id="toggle-female" class="btn btn-default">
                        <input type="radio" name="options" value="@Church.Helpers.Gender.Female" />
                        @Church.Helpers.Gender.Female
                    </label>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <input type="button" onclick="ConfirmCancel()" value="Cancel" class="btn btn-default" />
                </div>
            </div>

        </div>
    }
</div>



@*<div class="container">
        <div class="row centered-form">
            <div class="col-xs-12 col-sm-8 col-md-8 col-sm-offset-2 col-md-offset-2">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title">Member Registration</h3>
                    </div>
                    <div class="panel-body">
                        @using (Html.BeginForm("Add", "Member", FormMethod.Post, new { @data_toggle = "validator", @role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="row">
                                <div class="col-xs-6 col-sm-6 col-md-6">
                                    <div class="form-group">
                                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control input-sm floatlabel", @id = Model.FirstName, @placeholder = Html.DisplayNameFor(model => Model.FirstName) })
                                    </div>
                                </div>
                                <div class="col-xs-6 col-sm-6 col-md-6">
                                    <div class="form-group">
                                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control input-sm", @id = Model.LastName, @placeholder = Html.DisplayNameFor(model => model.FirstName) })
                                    </div>
                                </div>
                            </div>

                                <div class="row">
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.CellPhone, new { @class = "form-control input-sm", @id = Model.CellPhone, @placeholder = Html.DisplayNameFor(model => Model.CellPhone) })
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.HomePhone, new { @class = "form-control input-sm", @id = Model.HomePhone, @placeholder = Html.DisplayNameFor(model => Model.HomePhone) })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control input-sm", @id = Model.Email, @placeholder = Html.DisplayNameFor(model => Model.Email) })
                                </div>

                                <div class="row">
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.Address, new { @class = "form-control input-sm", @id = Model.Address, @placeholder = Html.DisplayNameFor(model => Model.Address) })
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.City, new { @class = "form-control input-sm", @id = Model.City, @placeholder = Html.DisplayNameFor(model => Model.City) })
                                        </div>
                                    </div>
                                </div>

                                <input type="submit" value="Register" class="btn btn-info btn-block">
                                <input type="submit" value="Register" class="btn btn-info btn-block">

                        }
                    </div>
                </div>
            </div>
        </div>
    </div>*@


<script>
    $(function () {
        $("#profession-auto-search").autocomplete({
            source: "/Member/GetProfessions",
            minlength: 1,
            select: function (event, ui) {
                var label = ui.item.label;
                var value = ui.item.id;
                $("#profession-auto-search").val(label);
                $("#ProfessionId").val(value);
                return false;
            }
        });
    });

    $("#toggle-male").click(function () {
        toggleBtnOff($(this).closest(".btn-group"));
        toggleBtnOn($(this), "btn-success");
    });

    $("#toggle-female").click(function () {
        toggleBtnOff($(this).closest(".btn-group"));
        toggleBtnOn($(this), "btn-success");
    });

    function toggleBtnOn(btn, className) {
        btn.toggleClass("btn-default");
        btn.toggleClass(className);
        btn.toggleClass("active");

        $("#Gender").val(btn.find("input").val());
    }

    function toggleBtnOff(group) {
        if (group.find('.btn-success').clone().size() > 0) {
            group.find('.active').toggleClass('btn-success');
        }

        group.find('.active').toggleClass('btn-default');
        group.find('.active').toggleClass('.active');
    }
</script>
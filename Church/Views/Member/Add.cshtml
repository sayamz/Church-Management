@model Church.ViewModels.MemberViewModel
@{
    ViewBag.Title = "Index";
}
<link href="~/Content/AddMember.css" rel="stylesheet" />
<div class="container"></div>,
<div class="container">
    <div class="row">
        <div class="stepwizard">
            <div class="stepwizard-row setup-panel">
                <div class="stepwizard-step">
                    <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                    <p>Step 1</p>
                </div>
                <div class="stepwizard-step">
                    <a href="#step-2" type="button" class="btn btn-default btn-circle" disabled="disabled">2</a>
                    <p>Step 2</p>
                </div>
                <div class="stepwizard-step">
                    <a href="#step-3" type="button" class="btn btn-default btn-circle" disabled="disabled">3</a>
                    <p>Step 3</p>
                </div>
            </div>
        </div>
    </div>

    @using (Html.BeginForm("Add", "Member", FormMethod.Post, new { @id = "AddMemberFormId" }))
    {
        @Html.AntiForgeryToken()
        <div class="row setup-content" id="step-1">
            <div class="col-xs-12">
                <div class="col-md-6">
                    <h3> Personal Information</h3>
                    <div class="form-group">
                        <label class="control-label">First Name</label>
                        @Html.TextBoxFor(model => model.FirstName,
                       new
                       {
                           @class = "form-control",
                           @placeholder = "Enter " + Html.DisplayNameFor(model => Model.FirstName),
                           @required = "true"
                       })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => Model.MiddleName) })
                    </div>
                    <div class="form-group">
                        <label class="control-label">Last Name</label>
                        @Html.TextBoxFor(model => model.LastName,
                       new
                       {
                           @class = "form-control",
                           @placeholder = "Enter " + Html.DisplayNameFor(model => Model.LastName),
                           @required = "true"
                       })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EnvelopeNumber, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.EnvelopeNumber,
                       new
                       {
                           @class = "form-control",
                           @placeholder = "Enter " + Html.DisplayNameFor(model => Model.EnvelopeNumber)
                       })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Profession, new { @class = "control-label" })
                        @Html.HiddenFor(model => model.ProfessionId)
                        @Html.Hidden("profession")
                        @Html.TextBoxFor(model => model.Profession.Name,
                       new
                       {
                           @class = "form-control",
                           @placeholder = "Start typing a Profession",
                           @id = "profession-auto-search",
                           @required = "true"
                       })
                    </div>
                    <div class="form-group">                       
                        <div class="col-md-10 col-sm-12 btn-group" data-toggle="buttons">
                            @Html.HiddenFor(model => model.Gender)
                            <label id="toggle-select" data-toggle-class="btn-success" class="btn btn-success active">
                                <input type="radio" name="options" value="" />
                                Select Gender
                            </label>
                            <label id="toggle-male" class="btn btn-default">
                                <input type="radio" name="options" value="@Church.Helpers.Gender.Male" />
                                @Church.Helpers.Gender.Male
                            </label>
                            <label id="toggle-female" class="btn btn-default">
                                <input type="radio" name="options" value="@Church.Helpers.Gender.Female" />
                                @Church.Helpers.Gender.Female
                            </label>
                        </div>
                    </div>
                    <button class="btn btn-primary nextBtn btn-lg pull-right" type="button">Next</button>
                </div>
            </div>
        </div>
        <div class="row setup-content" id="step-2">
            <div class="col-xs-6">
                <div class="col-md-12">
                    <h3> Contact Information</h3>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CellPhone, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.CellPhone,
                                   new
                                   {
                                       @class = "form-control",
                                       @placeholder = Html.DisplayNameFor(model => Model.CellPhone),
                                       @required = "true"
                                   })

                
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.HomePhone, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.HomePhone, new { @class = "form-control", @placeholder = "Enter " + Html.DisplayNameFor(model => Model.HomePhone) })
                        @Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })
                     </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => Model.Email) })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Address,
                               new
                               {
                                   @class = "form-control",
                                   @placeholder = "Enter " + Html.DisplayNameFor(model => Model.Address),
                                   @required = "true"
                               })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.PostalCode,
                               new
                               {
                                   @class = "form-control",
                                   @required = "true",
                                   @placeholder = "Enter" + Html.DisplayNameFor(model => Model.PostalCode)
                               })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.City,
                               new
                               {
                                   @class = "form-control",
                                   @required = "true",
                                   @placeholder = "Enter " + Html.DisplayNameFor(model => Model.City)
                               })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Province, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Province,
                               new
                               {
                                   @class = "form-control",
                                   @required = "true",
                                   @placeholder = "Enter " + Html.DisplayNameFor(model => Model.Province)
                               })
                    </div>
                    <button class="btn btn-primary prevBtn btn-lg pull-left" type="button">Previous</button>
                    <button class="btn btn-primary nextBtn btn-lg pull-right" id="lastButton" type="button">Next</button>
                </div>
            </div>
        </div>
        <div class="row setup-content" id="step-3">
            <div class="col-xs-6">
                <div class="col-md-12">
                    <h3>Review</h3> 
                        <div class="form-group">                            
                            <div class="col-md-6">
                                <label>Name: </label>@Html.TextBox("name_txt", null, "", new { @readonly = "true" })
                            </div>
                        </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            <label>Address: </label>@Html.TextArea("address_txt", "", new { @readonly = "true" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            <label>Email: </label>@Html.TextBox("email_txt", null, "", new { @readonly = "true" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            <label>Contact Numbers: </label>@Html.TextArea("phone_txt", "", new { @readonly = "true" })
                        </div>
                    </div>
                        <div class="form-group">                            
                            <div class="col-md-6">
                                <label>Gender: </label> @Html.TextBox("gender_txt", null, "", new { @readonly = "true" })
                            </div>
                        </div>
                    
                        <button class="btn btn-primary prevBtn btn-lg pull-left" type="button">Previous</button>
                        <button class="btn btn-success btn-lg pull-right" type="submit">Submit</button>
                    </div>
            </div>
        </div>
    }
</div>
<script>
    //http://www.bootply.com/Tou8fnpxJW#
    $(document).ready(function () {
        var navListItems = $('div.setup-panel div a'),
                allWells = $('.setup-content'),
                allNextBtn = $('.nextBtn'),
                allPrevBtn = $('.prevBtn');

        allWells.hide();

        navListItems.click(function (e) {
            e.preventDefault();
            var $target = $($(this).attr('href')),
                    $item = $(this);

            if (!$item.hasClass('disabled')) {
                navListItems.removeClass('btn-primary').addClass('btn-default');
                $item.addClass('btn-primary');
                allWells.hide();
                $target.show();
                $target.find('input:eq(0)').focus();
            }
        });

        allPrevBtn.click(function () {
            var curStep = $(this).closest(".setup-content"),
                curStepBtn = curStep.attr("id"),
                prevStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().prev().children("a");

            prevStepWizard.removeAttr('disabled').trigger('click');
        });

        allNextBtn.click(function () {
            var curStep = $(this).closest(".setup-content"),
                curStepBtn = curStep.attr("id"),
                nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                curInputs = curStep.find("input[type='text'],input[type='url']"),
                isValid = true;

            $(".form-group").removeClass("has-error");
            for (var i = 0; i < curInputs.length; i++) {
                if (!curInputs[i].validity.valid) {
                    isValid = false;
                    $(curInputs[i]).closest(".form-group").addClass("has-error");
                }
            }

            if (isValid)
                nextStepWizard.removeAttr('disabled').trigger('click');
        });

        $('div.setup-panel div a.btn-primary').trigger('click');

        $('#lastButton').click(function () {
            var fullName = $("#FirstName").val() + " " + $("#MiddleName").val() +" "+ $("#LastName").val();
            $("#name_txt").val(fullName);

            var gender = $("#Gender").val();
            $("#gender_txt").val(gender);

            var address = $("#Address").val() + " \n" + $("#City").val() + ", " + $("#Province").val() + " \n" + $("#PostalCode");
            $("#address_txt").val(address);

            var profession = $("#profession").val();
            $("#profession_txt").val(profession);

            $("#email_txt").val($("#Email").val());
            var phone = "Cell Phone: " +$("#CellPhone").val() + " \n Home Phone: " +$("#HomePhone").val();
            $("#phone_txt").val(phone);
            $("#envelope_txt").val($("#EnvelopeNumber").val());
        });

    });


    $(function () {
        $("#profession-auto-search").autocomplete({
            source: "/Member/GetProfessions",
            minlength: 1,
            select: function (event, ui) {
                var label = ui.item.label;
                var value = ui.item.id;
                $("#profession-auto-search").val(label);
                $("#profession").val(label);
                $("#ProfessionId").val(value);
                return false;
            }
        });
    });

    $("#toggle-select").click(function () {
        toggleBtnOff($(this).closest(".btn-group"));
        toggleBtnOn($(this), "btn-success");
    });

    $("#toggle-male").click(function () {
        toggleBtnOff($(this).closest(".btn-group"));
        toggleBtnOn($(this), "btn-success");
    });

    $("#toggle-female").click(function () {
        toggleBtnOff($(this).closest(".btn-group"));
        toggleBtnOn($(this), "btn-success");
    });

    function toggleBtnOn(btn, className) {
        btn.toggleClass("btn-default");
        btn.toggleClass(className);
        btn.toggleClass("active");

        $("#Gender").val(btn.find("input").val());
    }

    function toggleBtnOff(group) {
        if (group.find('.btn-success').length > 0) {
            group.find('.active').toggleClass('btn-success');
        }

        group.find('.active').toggleClass('btn-default');
        group.find('.active').toggleClass('.active');
    }
</script>
